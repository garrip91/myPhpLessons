<!DOCTYPE html>
<html lang="ru">
<head>
	<title>Задачи на приёмы работы с массивами на PHP</title>
	<meta charset="utf-8">
</head>
<body>

<?php

	// Объявляем переменную "$arr", в которую записываем пустой массив, также объявляем переменную "$str", в которую записываем 'x', далее объявляем цикл по конструкции "for", с первоначальным счётчиком "0", максимальным числовым значением меньше "10" и автоинкрементом на 1 единицу, в теле которого нашей пустой строке на каждой итерации присваиваем значение переменной "$str", а самой этой переменной конкатенируем 'x', после чего выводим в браузер полученный массив (СПОСОБ АВТОРА):
	$arr = [];
	$str = 'х';
	for ($i = 0; $i < 10; $i++) {
		$arr[] = $str;
		$str .= 'x';
	}
	var_dump($arr);
	
	// Объявляем переменную "$arr", в которую записываем пустой массив, далее объявляем цикл по конструкции "for", с первоначальным счётчиком "1", максимальным числовым значением "9" и автоинкрементом на 1 единицу, в теле которого объявляем переменную "$str" с пустой строкой, далее объявляем ПОДцикл по конструкции "for", с первоначальным счётчиком "0", максимальным числовым значением меньше значения счётчика цикла и автоинкрементом на 1 единицу, в теле которого мы переменной "$str" конкатенируем значение счётчика массива на каждой итерации, далее, после подцикла, присваиваем нашему пустому массиву конечное значение переменной "$str", после чего выводим в браузер полученный массив (СПОСОБ АВТОРА):
	$arr = [];
	for ($i = 1; $i <= 9; $i++) {
		$str = '';
		for ($j = 0; $j < $i; $j++) {
			$str .= $i;
		}
		$arr[] = $str;
	}
	var_dump($arr);
	
	// Объявляем функцию с названием "arrayFill" с параметрами в виде "$x" и "$y", в теле которого объявляем пустой массив "$arr", далее объявляем цикл "for" с начальным счётчиком "1", максимальным значением, соответствующим значению нашего 2-го параметра и автоинкрементом на 1 единицу, в теле которого присваиваем элементу массива "$arr[]" (с очередным ключом) значение, соответствующее значению нашего 1-го параметра, далее задаём в теле функции вывод в браузер полученного массива, после чего выводим в браузер работу данной функции с параметрами 'x' и "5" (МОЙ СПОСОБ)
	function arrayFill($x, $y) {
		$arr = [];
		for ($i=1; $i<=$y; $i++) {
			$arr[] = $x;
		}
		echo "<pre>";
		print_r($arr);
		echo "</pre>";
	}
	echo arrayFill('x', 5);

	// - (СПОСОБ АВТОРА):
	function arrayFill($str, $num)
	{
		$arr = [];
		for ($i = 1; $i <= $num; $i++) {
			$arr[] = $str;
		}
		return $arr;
	}
	var_dump(arrayFill('x', 5));
	
	// Объявляем переменную "$arr", в которую записываем числовой массив с числами от "1" до "9", также объявляем переменную "$sum", в которое записываем числовое значение "0", далее объявляем цикл "foreach" (применительно к нашему массиву) с ключом "$key" и значением "$elem", в теле которого объявляем условие по конструкции "if-else" с условием, что числовое значение переменной "$sum" больше числового значения "10", в теле которого объявляем переменную "$result", которой присваиваем числовое значение, большее значения переменной "$key" на 1 единицу и делаем обрывание, далее выходим из тела цикла и выводим в браузер числовое значение переменной "$result" (СПОСОБ АВТОРА):
	$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];
	$sum = 0;
	foreach ($arr as $key=>$elem) {
		$sum += $elem;
		if ($sum > 10) {
			$result = $key + 1; //+1 так как нумерация с нуля в $key
			break;
		}
	}
	echo $result;
	
	// Объявляем переменную "$arr", в которую записываем заявленный двумерный числовой массив, также объявляем нулевую переменную "$sum", которой, соответствено, присваиваем числовое значение "0", далее объявляем цикл "foreach" со значением "$v1", в теле которого - подцикл со значением "$v2", в теле которого переменную "$sum" мы на каждой итерации увеличиваем на каждый элемент массива, после чего конечную сумму выводим в браузер (МОЙ СПОСОБ):
	$arr = [[1, 2, 3], [4, 5], [6]];
	$sum = 0;
	foreach ($arr as $v1) {
		foreach ($v1 as $v2) {
			$sum += $v2;
		}
	}
	echo $sum;
	
	// - (СПОСОБ АВТОРА):
	$arr = [[1, 2, 3], [4, 5], [6,8]];
	$sum = 0;
	foreach ($arr as $elem) {
		foreach($elem as $num) {
			$sum += $num;
		}
	}
	echo $sum;
	
	// Объявляем переменную "$arr", в которую записываем заявленный трёхмерный числовой массив, также объявляем нулевую переменную "$sum", которой, соответствено, присваиваем числовое значение "0", далее объявляем цикл "foreach" со значением "$v1", в теле которого - подцикл со значением "$v2", в теле которого - подподцикл со значением "$v3", в теле которого переменную "$sum" мы на каждой итерации увеличиваем на каждый элемент массива, после чего конечную сумму выводим в браузер (МОЙ СПОСОБ):
	$arr = [[[1, 2], [3, 4]], [[5, 6], [7, 8]]];
	$sum = 0;
	foreach ($arr as $v1) {
		foreach ($v1 as $v2) {
			foreach ($v2 as $v3) {
				$sum += $v3;
			}
		}
	}
	echo $sum;
	
	// - (СПОСОБ АВТОРА):
	$arr = [[[1, 2], [3, 4]], [[5, 6], [7, 8]]];
	$sum = 0;
	foreach ($arr as $elem) {
		foreach($elem as $subElem) {
			foreach($subElem as $subSubElem) {
				$sum += $subSubElem;
			}
		}
	}
	echo $sum;
	
	// Объявляем переменную "$arr", в которую записываем пустой массив, также объявляем переменную "$count", которой присваиваем числовое значение "1", далее объявляем цикл "for" с начальным счётчиком "0", максимальным значением меньше "3" и автоинкрементом на 1 единицу, в теле которого - подцикл "for" с начальным счётчиком "0", максимальным значением меньше "3" и автоинкрементом на 1 единицу, в теле которого мы каждому элементу массива присваиваем значение переменной "$count" (то есть, "1"), затем увеличиваем значение в соответствии с пределом условия и так на каждой итерации, после чего конечный результат выводим в браузер (СПОСОБ АВТОРА):
	$arr = [];
	$count = 1;
	for ($i = 0; $i < 3; $i++) {
		for ($j = 0; $j < 3; $j++) {
			$arr[$i][$j] = $count;
			$count++;
		}
	}
	var_dump($arr);
	
?>
	
</body>
</html>