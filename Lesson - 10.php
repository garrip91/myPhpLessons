<!DOCTYPE html>
<html lang="ru">
<head>
	<title>Задачи на даты в PHP</title>
	<meta charset="utf-8">
</head>
<body>

<?php

	// Выводим в браузер текущее время в формате "timestamp", используя встроенную функцию "time()" (возвращает разницу в секундах между 01.01.1970 и текущим моментом) без параметров (СПОСОБ АВТОРА):
	echo time();
	
	// Выводим в браузер дату "01.03.2025" в формате "timestamp", используя встроенную функцию "mktime()" (возвращает ???) с параметрами "0" (0 часов), "0" (0 минут), "0" (0 секунд), "3" (3-й месяц), "1" (1-е число), "2025" (2025-й год) (МОЙ СПОСОБ (АНАЛОГИЧЕН СПОСОБУ АВТОРА)):
	echo mktime(0, 0, 0, 3, 1, 2025);
	
	// Выводим в браузер дату "31 декабря текущего года" в формате "timestamp", используя встроенную функцию "mktime()" (возвращает ???) с параметрами "0" (0 часов), "0" (0 минут), "0" (0 секунд), "12" (12-й месяц), "31" (31-е число) текущего года (последний параметр при этом должен отсутствовать) (МОЙ СПОСОБ (АНАЛОГИЧЕН СПОСОБУ АВТОРА)):
	echo mktime(0, 0, 0, 12, 31);
	
	// Выводим в браузер разницу между значением встроенной функции "time()" и "mktime()" с параметрами "13" (13 часов), "12" (12 минут), "59" (59 секунд), "3" (3-й месяц), "15" (15-е число), "2000" (2000-го года) (МОЙ СПОСОБ (АНАЛОГИЧЕН СПОСОБУ АВТОРА)):
	echo time() - mktime(13, 12, 59, 3, 15, 2000);
	
	// Используя встроенную функцию "floor()" (округления до меньшего целого числа), выводим в браузер разницу между значением встроенной функции "time()" и "mktime()" с параметрами "7" (7 часов), "23" (23 минут), "48" (48 секунд), делённым на кол-во секунд в часу (3600) (МОЙ СПОСОБ):
	echo floor((time() - mktime(7, 23, 48)) / 3600);
	
	// - (СПОСОБ АВТОРА):
	$sec = time() - mktime(7, 23, 48); //количество часов
	echo floor($sec / (60 * 60));
	
	// Используя встроенную функцию "date()" (вывода текущих даты и времени), выводим в текущие дату и время: "d" - день текущей даты, "m" - месяц текущей даты, "Y" - год текущей даты (верхний регистр используется для получения формата "гггг"), "H" - час текущего времени (верхний регистр используется для получения 24-часового формата), "i" - минута текущего времени, "s" - секунда текущего времени (МОЙ СПОСОБ):
	echo date('d.m.Y');
	echo "<br>";
	echo date('H:i:s');
	
	// - (СПОСОБ АВТОРА):
	echo date('Y.m.d H:i:s');
	
	// Используя встроенные функции "date()" и "mktime()" с соответствующими параметрами, выводим в браузер заявленные даты и время в заявленном формате (МОЙ СПОСОБ):
	echo date('Y-m-d', mktime(0, 0, 0, 12, 31, 2025));
	echo "<br>";
	echo date('d.m.Y', mktime(0, 0, 0, 12, 31, 2025));
	echo "<br>";
	echo date('d.m.y', mktime(0, 0, 0, 12, 31, 2013));
	echo "<br>";
	echo date('H:i:s', mktime(12, 59, 59));
	
	// - (СПОСОБ АВТОРА):
	echo date('Y-m-d'); //в формате '2025-12-31'
	echo date('d.m.Y'); //в формате '31.12.2025'
	echo date('d.m.y'); //в формате '31.12.13'
	echo date('H:i:s'); //в формате '12:59:59'
	
	// Используя встроенные функции "date()" и "mktime()" с соответствующими параметрами, выводим в браузер заявленную дату в заявленном формате (МОЙ СПОСОБ (АНАЛОГИЧЕН СПОСОБУ АВТОРА)):
	echo date('d.m.Y', mktime(0, 0, 0, 2, 12, 2025));
	
	// Объявляем переменную "$week", в которую записываем строковый массив, содержащий названия дней недели в сокращённом варианте, объявляем переменную "$current", в которую записываем встроенную функцию "date()" с единственным параметром 'w' (так как нам нужен день недели), после чего выводим в браузер элемент массива с ключом, соответствующим числовому значению встроенной функции "date()" с единственным параметром 'w' (текущий день недели), объявляем переменную "$last", в которую записываем встроенную функцию "date()" с параметрами в виде 'w' и встроенной функции "mktime()" со своими числовыми параметрами, соответствующими заявленной дате, после чего выводим в браузер элемент массива с ключом, соответствующим числовому значению встроенной функции "date()" (во втором случае), аналогичные действия проделываем с датой рождения (МОЙ СПОСОБ):
	$week = ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"];
	$current = date('w');
	echo $week[$current];
	echo "<br><br>";
	$last = date('w', mktime(0, 0, 0, 6, 6, 2006));
	echo $week[$last];
	echo "<br><br>";
	$birthday = date('w', mktime(0, 0, 0, 2, 5, 1991));
	echo $week[$birthday];
	
	// - (СПОСОБ АВТОРА):
	$week = ['вс', 'пн', 'вт', 'ср','чт', 'пт', 'сб'];
	echo $week[date('w',  mktime(0, 0, 0, 6, 6, 2006))];
	
	// Объявляем переменную "$month", в которую записываем строковый массив, содержащий названия месяцев, объявляем переменную "$current", в которую записываем встроенную функцию "date()" с единственным параметром 'n' (так как нам нужен порядковый номер месяца), после чего выводим в браузер элемент массива с ключом, соответствующим числовому значению встроенной функции "date()" с единственным параметром 'n' (текущий месяц) (МОЙ СПОСОБ):
	$month = ["Декабрь", "Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь"];
	$current = date('n');
	echo $month[$current];
	
	// - (СПОСОБ АВТОРА):
	$month = [
		1=>'янв', 'фев', 'мар', 'апр', 'май', 'июнь',
		'июль', 'авг', 'сен', 'окт', 'ноя', 'дек'
	];
	echo $month[date('n')];
	
	// Выводим в браузер кол-во дней в текущем месяце с использованием встроенной функции "date()" с единственным параметром 't' (СПОСОБ АВТОРА):
	echo date('t');
	
	// объявляем форму обратной связи, в которой атрибут "action" у нас остаётся пустым, атрибуту "method" указываем значение "GET", а в теле формы указываем 1 поле ввода текста с именем "year" и 1 кнопку отправки формы, затем объявляем условие по конструкции "if-else", по условию которого если ключ 'year' (соответствующий нашему имени "year") глобального массива, записанного в глобальную переменную "$_REQUEST", непустой, то в его теле мы объявляем переменную "$year", которой присваиваем значение, соответствующее значению ключа 'year', далее объявляем ещё 1 условие по конструкции "if-else", в условии которого указываем, что встроенная функция "date()" с параметрами в виде 'L' (признак високосного года), встроенной функции "mktime()" с параметрами "0", "0", "0", "1", "1", "$year" равно числовому значению "1", а в теле - вывод в браузер текста 'год високосный' в случае, если условие истинно, и 'год не високосный' в ином случае (СПОСОБ АВТОРА (немного переделанный)):
	<form action="" method="GET">
		<input type="text" name="year">
		<input type="submit">
	</form>
	<?php
		if (!empty($_REQUEST['year'])) {
			$year = $_REQUEST['year'];
			if (date('L', mktime(0, 0, 0, 1, 1, $year)) == 1) {
				echo 'год високосный';
			} else {
				echo 'год не високосный';
			}
		}
	?>
	
	// объявляем форму обратной связи, в которой атрибут "action" у нас остаётся пустым, атрибуту "method" указываем значение "GET", а в теле формы указываем 1 поле ввода текста с именем "date" и 1 кнопку отправки формы, затем объявляем условие по конструкции "if-else", по условию которого если ключ 'date' (соответствующий нашему имени "date") глобального массива, записанного в глобальную переменную "$_REQUEST", непустой, то в его теле мы объявляем переменную "$date", которой присваиваем значение, соответствующее значению ключа 'date', объявляем переменную "$week", в которую записываем строковый массив, содержащий названия дней недели в сокращённом варианте, объявляем переменную "$selectedDay", в которую записываем встроенную функцию "date()" с параметрами в виде 'w' (для выбора дня недели) и встроенной функции "mktime()" с параметрами "0" (0 часов), "0" (0 минут), "0" (0 секунд), "$date[1]" (месяц в ведённой пользователем строке), "$date[0]" (дата в ведённой пользователем строке), "$date[2]" (год в ведённой пользователем строке), после чего выводим в браузер элемент массива с ключом, соответствующим числовому значению встроенной функции "date()" (МОЙ СПОСОБ):
	<form action="" method="GET">
		<input type="text" name="date" size="35" placeholder='Введите дату в формате "ДД.ММ.ГГГГ"'>
		<input type="submit">
	</form>
	<?php
		if (!empty($_REQUEST['date'])) {
			$date = explode('.', $_REQUEST['date']);
			$week = ['вс', 'пн', 'вт', 'ср','чт', 'пт', 'сб'];
			$selectedDay = date('w', mktime(0, 0, 0, $date[1], $date[0], $date[2]));
			echo $week[$selectedDay];
		}
	?>
	
	// - (СПОСОБ АВТОРА):
	<form action="" method="GET">
		<input type="text" name="date">
		<input type="submit">
	</form>
	<?php
		if (isset($_REQUEST['date'])) {
			$date = explode('.', $_REQUEST['date']);
			$week = ['вс', 'пн', 'вт', 'ср','чт', 'пт', 'сб'];
			echo $week[date('w',  mktime(0, 0, 0, $date[1], $date[0], $date[2]))];
		}
	?>
	
	// объявляем форму обратной связи, в которой атрибут "action" у нас остаётся пустым, атрибуту "method" указываем значение "GET", а в теле формы указываем 1 поле с выпадающим списком (календарём) с именем "date" и 1 кнопку отправки формы, затем объявляем условие по конструкции "if-else", по условию которого если ключ 'date' (соответствующий нашему имени "date") глобального массива, записанного в глобальную переменную "$_REQUEST", непустой, то в его теле мы объявляем переменную "$date", которой присваиваем значение, соответствующее значению ключа 'date', объявляем переменную "$month", в которую записываем строковый массив, содержащий названия месяцев, объявляем переменную "$selectedDay", в которую записываем встроенную функцию "date()" с параметрами в виде 'n' (для выбора месяца по порядковому номеру) и встроенной функции "mktime()" с параметрами "0" (0 часов), "0" (0 минут), "0" (0 секунд), "$date[1]" (месяц в ведённой пользователем строке), "$date[2]" (дата в ведённой пользователем строке), "$date[0]" (год в ведённой пользователем строке), после чего выводим в браузер элемент массива с ключом, соответствующим числовому значению встроенной функции "date()" (МОЙ СПОСОБ):
	<form action="" method="GET">
		<input type="date" name="date">
		<input type="submit">
	</form>
	<?php
		if (!empty($_REQUEST['date'])) {
			$date = explode('-', $_REQUEST['date']);
			$month = ["Декабрь", "Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь"];
			$selectedDay = date('n', mktime(0, 0, 0, $date[1], $date[2], $date[0]));
			echo $month[$selectedDay];
		}
	?>
	
	// - (СПОСОБ АВТОРА):
	<form action="" method="GET">
		<input type="text" name="date">
		<input type="submit">
	</form>
	<?php
		if (isset($_REQUEST['date'])) {
			$date = explode('-', $_REQUEST['date']);
			$month = [
				1=>'янв', 'фев', 'мар', 'апр', 'май', 'июнь',
				'июль', 'авг', 'сен', 'окт', 'ноя', 'дек'
			];
			echo $month[date('n',  mktime(0, 0, 0, $date[1], $date[2], $date[0]))];
		}
	?>
	
	// объявляем форму обратной связи, в которой атрибут "action" у нас остаётся пустым, атрибуту "method" указываем значение "GET", а в теле формы указываем 2 поля ввода текста с именами "date1" и "date2", а также 1 кнопку отправки формы, затем объявляем условие по конструкции "if-else", по условию которого если ключи 'date1' и 'date2' (соответствующие нашим именам "date1" и "date2") глобального массива, записанного в глобальную переменную "$_REQUEST", непустые, то в его теле мы объявляем переменные "$date1" и "date2", которым присваиваем значения, соответствующие значениям ключей 'date1' и 'date2' соответственно, далее объявляем условие по конструкции "if-else", по которому если значение переменной "$date1" больше значения переменной "$date2", то мы выводим в браузер значение переменной "$date1", иначе - значение переменной "$date2" (МОЙ СПОСОБ):
	<form action="" method="GET">
		<input type="text" name="date1" size="35" placeholder='Введите первую дату в формате "ГГГГ-ММ-ДД"'><br><br>
		<input type="text" name="date2" size="35" placeholder='Введите вторую дату в формате "ГГГГ-ММ-ДД"'><br><br>
		<input type="submit">
	</form>
	<?php
		if (!empty($_REQUEST['date1']) && !empty($_REQUEST['date2'])) {
			$date1 = $_REQUEST['date1'];
			$date2 = $_REQUEST['date2'];
			if ($date1 > $date2) {
				echo $date1;
			} else {
				echo $date2;
			}
		}
	?>
	
	// - (СПОСОБ АВТОРА):
	<form action="" method="GET">
		<input type="text" name="date1">
		<input type="text" name="date2">
		<input type="submit">
	</form>
	<?php
		if (isset($_REQUEST['date1']) and isset($_REQUEST['date2'])) {
			$date1 = $_REQUEST['date1'];
			$date2 = $_REQUEST['date2'];
			if ($date1 > $date2) {
				echo $date1;
			} else {
				echo $date2;
			}
		}
	?>
	
	// Передавая встроенной функции "date()" 2 параметра, 1-й из которых - нужный нам формат даты, а 2-й - встроенная функция "strtotime" c единственным параметром в виде заявленной строки (даты), выводим в браузер дату в нужном нам формате (СПОСОБ АВТОРА):
	echo date('d-m-Y', strtotime('2025-12-31'));
	
	// объявляем форму обратной связи, в которой атрибут "action" у нас остаётся пустым, атрибуту "method" указываем значение "GET", а в теле формы указываем 1 поле ввода текста с именами "date", а также 1 кнопку отправки формы, затем объявляем условие по конструкции "if-else", по условию которого если ключ 'date' (соответствующий нашему имени "date") глобального массива, записанного в глобальную переменную "$_REQUEST", непустой, то мы выводим в браузер дату и время в нужном нам формате, передавая встроенной функции "date()" 2 параметра, 1-й из которых - нужные нам форматы времени и даты, а 2-й - встроенная функция "strtotime" c единственным параметром в виде ключа 'date' (СПОСОБ АВТОРА (немного переделланный)):
	<form action="" method="GET">
		<input type="text" name="date">
		<input type="submit">
	</form>
	<?php
		if (!empty($_REQUEST['date'])) {
			echo date('H:i:s d.m.Y', strtotime($_REQUEST['date']));
		}
	?>
	
	// объявляем переменную "date1", в которую записываем встроенную функцию "date_create()" (подготовки даты В ФОРМАТЕ "ГОД-МЕСЯЦ-ДЕНЬ" к работе), в которой используем единственный параметр - заявленную строку (исходную дату), затем объявляем встроенную функцию "date_modify()" (для прибавления или вычитания дней), в которой 1-м параметром указываем нашу переменную с созданной строкой (датой), 2-м - арифметическую операцию, которую нам необходимо произвести над заявленной датой (в одинарных кавычках), после чего, используя встроенную функцию "date_format()" (получения даты в заданном формате), в которой 1-м параметром указываем переменную с исходной датой, 2-м - строковое представление формата, в котором нам необходимо получить конечный результат, выводим в браузер этот самый результат (далее мы всё то же самое проделываем с остальными арифметическими операциями) (МОЙ СПОСОБ):
	$date1 = date_create('2025-12-31');
	date_modify($date1, '2 days');
	echo date_format($date1, 'd.m.Y');
	echo "<br><br>";
	$date2 = date_create('2025-12-31');
	date_modify($date2, '1 month 3 days');
	echo date_format($date2, 'd.m.Y');
	echo "<br><br>";
	$date3 = date_create('2025-12-31');
	date_modify($date3, '1 year');
	echo date_format($date3, 'd.m.Y');
	echo "<br><br>";
	$date4 = date_create('2025-12-31');
	date_modify($date4, '-3 days');
	echo date_format($date4, 'd.m.Y');
	
	// - (СПОСОБ АВТОРА):
	//2 дня
	$date =  date_create('2025-12-31');
	date_modify($date, '2 day');
	echo date_format($date, 'd.m.Y');
	//1 месяц и 3 дня
	$date =  date_create('2025-12-31');
	date_modify($date, '1 month 3 day');
	echo date_format($date, 'd.m.Y');
	//1 год
	$date =  date_create('2025-12-31');
	date_modify($date, '1 year');
	echo date_format($date, 'd.m.Y');
	//Минус 3 дня
	$date =  date_create('2025-12-31');
	date_modify($date, '-3 day');
	echo date_format($date, 'd.m.Y');
	
	// Объявляем переменную "$time", в которую записываем встроенную функцию "mktime()" (возвращает ???) с параметрами "23" (23 часа), "59" (59 минут), "59" (59 секунд), "12" (12-й месяц), "31" (31-е число), перезаписываем в данную переменную значение переменной "$time", увеличенное на 1 единицу, после чего выводим в браузер разницу между "timestamp"-значением интересующей нас даты и "timestamp"-значением сегодняшнего дня, делённым на дни (всё это округлено до меньшего целого числа) (СПОСОБ АВТОРА):
	//Последняя секунда 31-го декабря текущего года:
	$time = mktime(23, 59, 59, 12, 31);
	//Первая секунда нового года:
	$time = $time + 1;
	//Отнимем от этого момента текущий и преобразуем в дни:
	echo floor(($time - time()) / (60 * 60 * 24));
	
	// объявляем форму обратной связи, в которой атрибут "action" у нас остаётся пустым, атрибуту "method" указываем значение "GET", а в теле формы указываем 1 поле ввода текста с именами "year", а также 1 кнопку отправки формы, затем объявляем условие по конструкции "if-else", по условию которого если ключ 'year' (соответствующий нашему имени "year") глобального массива, записанного в глобальную переменную "$_REQUEST", непустой, то мы объявляем переменную "$year", которой присваиваем значение, соответствующее значению ключа 'year', объявляем переменную "$arr", которой присваиваем пустой массив, далее объявляем цикл "for", по условию которого первичное значение счётчика - "1", оно может быть меньше либо равно числовому значению "12" и будет увеличиваться на 1 единицу на каждой итерации, в теле которого мы объявляем переменную "$timestamp", которой присваиваем встроенную функцию "mktime()" с параметрами "0" (0 часов), "0" (0 минут), "0" (0 секунд), "$i" (порядковый номер месяца, соответствующий значению счётчика на каждой итерации), "13" (13-е число), "$year" (год), далее объявляем условие по конструкции "if-else", в котором объявляем встроенную функцию "date()" с параметрами в виде 'w', "$timestamp" и приравниваем её к числовому значению "5", а в теле этого условия мы пустому массива присваиваем встроенную функцию "date" с параметрами в виде нужного нам формата даты и значения переменной "$timestamp", после чего выводим в браузер все пятницы 13-е (СПОСОБ АВТОРА (немного переделланный)):
	<form action="" method="GET">
		<input type="text" name="year">
		<input type="submit">
	</form>
	<?php
		if (!empty($_REQUEST['year'])) {
			$year = $_REQUEST['year'];
			$arr = [];
			for($i = 1; $i <= 12; $i++) {
				$timestamp = mktime(0, 0, 0, $i, 13, $year);
				if (date('w', $timestamp) == 5) {
					$arr[] = date('d-m-Y', $timestamp);
				}
			}
			echo "<pre>";
			print_r($arr);
			echo "</pre>";
		}
	?>
	
	// Объявляем переменную "$date", которой присваиваем встроенную функцию "date_create()" без каких-либо параметров, затем объявляем встроенную функцию "date_modify()", с параметрами в виде переменной "$date" и строкового представления арифметической операции вычитания 100-а дней, затем объявляем переменную "$num", которой присваиваем встроенную функцию "date_format()" с параметрами в виде переменной "$date" и 'w', затем объявляем переменную "$week", в которую записываем строковый массив, содержащий названия дней недели в сокращённом варианте, после чего выводим в браузер элемент массива "$week" с ключом, соответствующим значению переменной "$num" (СПОСОБ АВТОРА):
	$date = date_create();
	date_modify($date, '-100 day');
	$num = date_format($date, 'w');
	$week = ['вс', 'пн', 'вт', 'ср','чт', 'пт', 'сб'];
	echo $week[$num];

</body>
</html>