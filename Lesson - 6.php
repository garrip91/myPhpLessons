<!DOCTYPE html>
<html lang="ru">
<head>
	<title>Задачи на функции работы со строками в PHP</title>
	<meta charset="utf-8">
</head>
<body>

<?php

	// выводим в браузер строку в нижнем регистре, преобразованную в строку в верхнем регистре с помощью встроенной функции "mb_strtoupper()" (МОЙ СПОСОБ):
	echo mb_strtoupper('php');
	
	// - (СПОСОБ АВТОРА):
	echo strtoupper('php');
	
	// выводим в браузер строку в верхнем регистре, преобразованную в строку в нижнем регистре с помощью встроенной функции "mb_strtolower()" (МОЙ СПОСОБ):
	echo mb_strtolower('PHP');
	
	// - (СПОСОБ АВТОРА):
	echo strtolower('PHP');
	
	// выводим в браузер строку в нижнем регистре, в которой 1-й символ преобразован в верхний регистр с помощью встроенной функции "ucfirst()" (МОЙ СПОСОБ (АНАЛОГИЧЕН СПОСОБУ АВТОРА)):
	echo ucfirst('london');
	
	// выводим в браузер строку в нижнем регистре с 1-м символом в верхнем регистре, в которой 1-й символ преобразован в нижний регистр с помощью встроенной функции "lcfirst()" (МОЙ СПОСОБ (АНАЛОГИЧЕН СПОСОБУ АВТОРА)):
	echo lcfirst('London');
	
	// выводим в браузер строку в нижнем регистре, в которой 1-е символы каждого слова преобразованы в верхний регистр с помощью встроенной функции "ucwords()" (МОЙ СПОСОБ (АНАЛОГИЧЕН СПОСОБУ АВТОРА)):
	echo ucwords('london is the capital of great britain');
	
	// выводим в браузер строку в верхнем регистре, преобразованную сначала в строку в нижнем регистре с помощью встроенной функции "mb_strtolower()", затем преобразованную в строку в нижнем регистре с 1-м символом в верхнем регистре с помощью встроенной функции "ucfirst()" (МОЙ СПОСОБ):
	echo ucfirst(mb_strtolower('LONDON'));
	
	// - (СПОСОБ АВТОРА):
	echo ucfirst(strtolower('LONDON');
	
	// выводим в браузер числовое значение, указывающее на число символов в строке, с помощью встроенной функции "mb_strlen()" (МОЙ СПОСОБ):
	echo mb_strlen('html css php');
	
	// - (СПОСОБ АВТОРА):
	echo strlen('html css php');
	
	// объявляем переменную "$password", в которую записываем любое строковое значение (в данном случае был использован пароль из таблицы БД, зашифрованный методом "md5"), затем объявляем условие по конструкции "if-else", согласно которому, если длина строки больше числового значения "5" и меньше числового значения "10"(это мы проверяем с помощью встроенной функции "mb_strlen()"), то выводим в браузер сообщение "Пароль подходит!", иначе - "Нужно придумать другой пароль!" (МОЙ СПОСОБ):
	$password = '$2y$10$Kgtc88zPkV8DLcDb16t7dOQ7RGaI0.oR5PaNd6Ui4mEoKO8p.XG36';
	if (mb_strlen($password) > 5 && mb_strlen($password) < 10) {
		echo "Пароль подходит!";
	} else {
		echo "Нужно придумать другой пароль!";
	}
	
	// - (СПОСОБ АВТОРА):
	$password = '123456789';
	$len = strlen($password);
	if ($len > 5 and $len < 10) {
		echo 'Пароль подходит';
	} else {
		echo 'Пароль не подходит, придумайте другой';
	}
	
	// выводим в браузер фрагмент строки, начинающий с нулевого индекса (1-го символа) и содержащий 4 символа, затем начинающийся с 5-го индекса и содержащий 3 символа и затем начинающийся с 9-го символа и содержащий 3 символа, с помощью встроенной функции "mb_substr()" (возврата подстроки) (МОЙ СПОСОБ):
	echo mb_substr('html css php', 0, 4);
	echo "<br>";
	echo mb_substr('html css php', 5, 3);
	echo "<br>";
	echo mb_substr('html css php', 9, 3);
	
	// - (СПОСОБ АВТОРА):
	echo substr('html css php', 0, 4); //html
	echo substr('html css php', 5, 3); //css
	echo substr('html css php', 9, 3); //php
	
	// объявляем переменную "$password", в которую записываем любое строковое значение (в данном случае был использован пароль из таблицы БД, зашифрованный методом "md5"), после чего с использованием встроенной функции "mb_substr()" выводим в браузер фрагмент строки, начинающийся с 3-го символа с конца и состоящий из 3-х символов (МОЙ СПОСОБ):
	$password = '$2y$10$Kgtc88zPkV8DLcDb16t7dOQ7RGaI0.oR5PaNd6Ui4mEoKO8p.XG36';
	echo mb_substr($password, -3, 3);
	
	// - (СПОСОБ АВТОРА):
	echo substr('123456789', -3); //789
	
	// объявляем переменную "$str", в которую записываем любое строковое значение (в данном случае была использована url-ссылка на текущую страницу), затем по конструкции "if-else" объявляем условие, согласно которому, если первые 7 символов нашего строкового значения соответствуют заявленному в задаче условию, то в в браузер мы выводим сообщение "Да!", иначе - "Нет!" (МОЙ СПОСОБ):
	$str = "http://code.mu/tasks/php/base/rabota-so-strokovymi-funkciyami-v-php.html";
	if (mb_substr($str, 0, 7) === 'http://') {
		echo "Да!";
	} else {
		echo "Нет!";
	}
	
	// - (СПОСОБ АВТОРА):
	$str = 'http://phphtml.net';
	if (substr($str, 0, 7) == 'http://') {
		echo 'Да';
	} else {
		echo 'Нет';
	}
	
	// объявляем переменную "$str", в которую записываем любое строковое значение (в данном случае была использована url-ссылка на Главную страницу сайта "Mail.Ru"), затем по конструкции "if-else" объявляем условие, согласно которому, если первые 7 символов нашего строкового значения соответствуют строке 'http://' ИЛИ 'https://', то в в браузер мы выводим сообщение "Да!", иначе - "Нет!" (МОЙ СПОСОБ):
	$str = "https://mail.ru/";
	if (mb_substr($str, 0, 7) === 'http://' || mb_substr($str, 0, 8) === 'https://') {
		echo "Да!";
	} else {
		echo "Нет!";
	}
	
	// - (СПОСОБ АВТОРА):
	$str = 'http://phphtml.net';
	$check1 = substr($str, 0, 7);
	$check2 = substr($str, 0, 8);
	if ($check1 == 'http://' or $check2 == 'https://') {
		echo 'Да';
	} else {
		echo 'Нет';
	}
	
	// объявляем переменную "$str", в которую записываем любое строковое значение (в данном случае была использована строка "img.png", так как 'png' - это расширение изображения), затем по конструкции "if-else" объявляем условие, согласно которому, если последние 4 символа нашего строкового значения соответствуют строке '.png', то в браузер мы выводим сообщение "Да!", иначе - "Нет!" (МОЙ СПОСОБ):
	$str = "img.png";
	if (mb_substr($str, -4) === '.png') {
		echo "Да!";
	} else {
		echo "Нет!";
	}
	
	// - (СПОСОБ АВТОРА):
	$str = '1.png';
	$check = substr($str, -4);
	if ($check == '.png') {
		echo 'Да';
	} else {
		echo 'Нет';
	}
	
	// объявляем переменную "$str", в которую записываем любое строковое значение (в данном случае была использована строка "img.jpg", так как 'jpg' - это расширение изображения), затем по конструкции "if-else" объявляем условие, согласно которому, если последние 4 символа нашего строкового значения соответствуют строке '.png' ИЛИ '.jpg', то в браузер мы выводим сообщение "Да!", иначе - "Нет!" (МОЙ СПОСОБ):
	$str = "img.jpg";
	if (mb_substr($str, -4) === '.png' || mb_substr($str, -4) === '.jpg') {
		echo "Да!";
	} else {
		echo "Нет!";
	}
	
	// - (СПОСОБ АВТОРА):
	$str = '1.png';
	$check = substr($str, -4);
	if ($check == '.png' or $check == '.jpg') {
		echo 'Да';
	} else {
		echo 'Нет';
	}
	
	// объявляем переменную "$str", в которую записываем любое строковое значение (в данном случае был использован пароль из таблицы БД, зашифрованный методом "md5"), затем по конструкции "if-else" объявляем условие, согласно которому, если длина указанного строкового значение превышает числовое значение "5", то мы её сокращаем до 5-и символов включительно, добавляем в конец многоточие и выводим конечный результат в браузер, иначе - значение переменной "$str" мы выводим в браузер полностью (МОЙ СПОСОБ):
	$str = "$2y$10$Kgtc88zPkV8DLcDb16t7dOQ7RGaI0.oR5PaNd6Ui4mEoKO8p.XG36";
	if (mb_strlen($str) > 5) {
		echo substr($str, 0, 5)."...";
	} else {
		echo $str;
	}
	
	// - (СПОСОБ АВТОРА):
	$str = '123456789';
	if(strlen($str) > 5) {
		echo substr($str, 0, 5). '...';
	} else {
		echo $str;
	}
	
	// объявляем переменную "$str", в которую записываем строку, после чего, используя встроенную функцию "str_replace()" (замены подстроки в строке), в которой первым параметром в квадратных скобках указываем 1 из символов, которые нам нужно заменить, вторым параметром, в других квадратных скобках указываем 1 из символов, на которые нам нужно заменить предыдущие, а третьим параметром указываем строку, в которой нам необходимо произвести данные изменения, и полученный результат выводим в браузер (МОЙ СПОСОБ):
	$str = '31.12.2013';
	echo str_replace(['.'], ['-'], $str);
	
	// - (СПОСОБ АВТОРА):
	echo str_replace('.', '-', '31.12.2013');
	
	// объявляем переменную "$str", в которую записываем строку, после чего, используя встроенную функцию "str_replace()", которой первым параметром в квадратных скобках, через запятую, указываем 3 строковых символа, которые нам нужно заменить, вторым параметром, в других квадратных скобках указываем 3 строковых символа, на которые нам нужно заменить предыдущие, а третьим параметром указываем строку, в которой нам необходимо произвести данные изменения, и полученный результат выводим в браузер (МОЙ СПОСОБ (ПОЧТИ АНАЛОГИЧЕН СПОСОБУ АВТОРА)):
	$str = "abcabc";
	echo str_replace(['a', 'b', 'c'], [1, 2, 3], $str);
	
	// объявляем переменную "$str", в которую записываем заявленную строку, после чего, используя встроенную функцию "str_replace()", в которой первым параметром, в квадратных скобках, указываем числа "1, 2, 3, 4, 5, 6, 7, 8, 9, 0", которые нам нужно заменить, вторым параметром, в других квадратных скобках, указываем 10 раз (через запятую) строку " '' ", на которую нам нужно заменить предыдущие, а третьим параметром, через запятую указываем строку, в которой нам необходимо произвести данные изменения, и полученный результат выводим в браузер (МОЙ СПОСОБ (ПОЧТИ АНАЛОГИЧЕН СПОСОБУ АВТОРА)):
	$str = "1a2b3c4b5d6e7f8g9h0";
	echo str_replace([1, 2, 3, 4, 5, 6, 7, 8, 9, 0], ['', '', '', '', '', '', '', '', '', ''], $str);
	
	// объявляем переменную "$str", в которую записываем произвольную строку, содержащую латинские буквы "a", "b" и "c", после чего, используя встроенную функцию "strtr()" (поиска и замены символов в строке), в которой первым параметром указываем саму изменяемую строку, а вторым параметром, в квадратных скобках, указываем символы (в данном случае буквы латинского алфавита), подлежащие изменению (как ключи в данном массиве), и символы (в данном случае числа), на которые мы их заменяем (как значения ключей в данном массиве), и полученный результат выводим в браузер (МОЙ СПОСОБ (АНАЛОГИЧЕН 1-МУ СПОСОБУ АВТОРА)):
	$str = "1a2b3c4b5d6e7f8g9h0";
	$str = "abcabc";
	echo strtr($str, ['a' => 1, 'b' => 2, 'c' => 3]);
	
	// - (ВТОРОЙ СПОСОБ АВТОРА):
	$str = 'abcabc';
	echo strtr($str, 'abc', '123'); //выведет '123123'
	
	// объявляем переменную "$str", в которую записываем произвольную строку, после чего, используя встроенную функцию "substr_replace()" (поиска и замены подстроки в строке), в которой мы первым параметром указываем строку, которую собираемся изменить, вторым параметром - строку, на которую собираемся изменить исходную, а третьим параметром - порядковый номер (индекс) символа, с которого начинаем изменять, и полученный результат выводим в браузер (МОЙ СПОСОБ (АНАЛОГИЧЕН СПОСОБУ АВТОРА)):
	$str = "abcdefghijklmnopqrstuvwxyz";
	echo substr_replace($str, '!!!', 3, 5);
	
	// объявляем переменную "$str", в которую записываем заявленную строку, после чего, используя встроенную функцию "strpos()" (возврата позиции первого вхождения), в которой мы первым параметром указываем строку, в которой собираемся искать подстроку, а вторым параметром - саму подстроку, которую ищем, и полученный результат выводим в браузер (МОЙ СПОСОБ (ПОЧТИ АНАЛОГИЧЕН СПОСОБУ АВТОРА)):
	$str = 'abc abc abc';
	echo strpos($str, 'b');
	
	// объявляем переменную "$str", в которую записываем заявленную строку, после чего, используя встроенную функцию "strrpos()" (возврата позиции последнего вхождения), в которой мы первым параметром указываем строку, в которой собираемся искать подстроку, а вторым параметром - саму подстроку, которую ищем, и полученный результат выводим в браузер (МОЙ СПОСОБ (ПОЧТИ АНАЛОГИЧЕН СПОСОБУ АВТОРА)):
	$str = 'abc abc abc';
	echo strrpos($str, 'b');
	
	// объявляем переменную "$str", в которую записываем заявленную строку, после чего, используя встроенную функцию "strpos()" (возврата позиции первого вхождения), в которой мы первым параметром указываем строку, в которой собираемся искать подстроку, вторым параметром - саму искомую подстроку, а третьим параметром - позицию, с которой мы будем вести поиск, и полученный результат выводим в браузер (МОЙ СПОСОБ (ПОЧТИ АНАЛОГИЧЕН СПОСОБУ АВТОРА)):
	$str = 'abc abc abc';
	echo strpos($str, 'b', 3);
	
	// объявляем переменные "$str" и "$first", в которые записываем заявленную строку и встроенную функцию "strpos()" (возврата позиции первого вхождения), в котором мы определяем позицию первого пробела, соответственно, после чего, используя ту же функцию, в которой мы первым параметром указываем нашу строку, в которой собираемся искать подстроку, вторым параметром - саму искому подстроку, третьим параметром - переменную "$first" с прибавлением значения "1", и полученный результат выводим в браузер (СПОСОБ АВТОРА):
	$str = 'aaa aaa aaa aaa aaa';
	$first = strpos($str, ' '); //позиция первого пробела
	echo strpos($str, ' ', $first + 1);
	
	// объявляем переменную "$str", в которую записываем произвольную строку, затем объявляем условие по конструкции "if-else", в котором определяем, что, если наша произвольная строка содержит подстроку "..", то мы выводим в браузер строку "Да", иначе - "Нет!" (МОЙ СПОСОБ):
	$str = "abc..fgh";
	if(strpos($str, "..") == true) {
		echo "Да!";
	} else {
		echo "Нет!";
	}
	
	// - (СПОСОБ АВТОРА):
	$str = 'aaa..aaaa';
	if(strpos($str, '..') !== false) {
		echo 'Да';
	} else {
		echo 'Нет';
	}
	
	// объявляем переменную "$str", в которую записываем произвольную строку, содержащую подстроку "http://", затем объявляем условие по конструкции "if-else", в котором определяем, что, если наша произвольная строка содержит искомую подстроку в позиции "0" (проверяем через оператор эквивалентности (строгого равенства), так как булевое значение false языком также интерпретируется как "0"), то мы выводим в браузер строку "Да", иначе - "Нет!" (МОЙ СПОСОБ):
	$str = "http://code.mu/tasks/php/base/rabota-so-strokovymi-funkciyami-v-php.html";
	if (strpos($str, "http://") === 0) {
		echo "Да!";
	} else {
		echo "Нет!";
	}
	
	// - (СПОСОБ АВТОРА):
	$str = 'http://phphtml.net';
	//Проверяем, что строка начинается с http://:
	if(strpos($str, 'http://') === 0) {
		echo 'Да';
	} else {
		echo 'Нет';
	}
	
	// объявляем переменные "$str" и "$arr", в которые записываем заявленную строку и встроенную функцию "explode()" (преобразования строки в массив) соответственно, затем в эту функцию первым параметром мы передаём пробельную строку, а вторым - нашу переменную, в которой заявленная строка, после чего выводим полученный результат в браузер (МОЙ СПОСОБ):
	$str = 'html css php';
	$arr = explode(' ', $str);
	echo "<pre>";
	print_r($arr);
	echo "</pre>";
	
	// - (СПОСОБ АВТОРА):
	$arr = explode(' ', 'html css php');
	var_dump($arr);
	
	// объявляем переменные "$arr" и "$str", в которые записываем заявленную строку и встроенную функцию "implode()" (преобразования массива в строку) соответственно, затем в эту функцию первым параметром мы передаём строку ", ", а вторым - нашу переменную, в которой заявленная строка, после чего выводим полученный результат в браузер (МОЙ СПОСОБ):
	$arr = ['html', 'css', 'php'];
	$str = implode(', ', $arr);
	echo "$str";
	
	// - (СПОСОБ АВТОРА):
	$arr = ['html', 'css', 'php'];
	echo implode(',', $arr);
	
	// объявляем переменные "$date" и "$arr", в которые записываем заявленную строку и встроенную функцию "explode()" (преобразования строки в массив) соответственно, затем в эту функцию первым параметром мы передаём строку "-", а вторым - нашу переменную, в которой заявленная строка, после чего выводим полученный результат в браузер (МОЙ СПОСОБ):
	$date = '2013-12-31';
	$arr = explode('-', $date);
	echo "$arr[2].$arr[1].$arr[0]";
	
	// - (СПОСОБ АВТОРА):
	$date = '2013-12-31';
	$arr = explode('-', $date);
	echo $arr[2].'.'.$arr[1].'.'.$arr[0];
	
	// объявляем переменные "$str" и "$arr", в которые записываем заявленную строку и встроенную функцию "str_split()" (другого способа преобразования строки в массив) соответственно, затем в эту функцию первым параметром мы передаём нашу переменную, в которой заявленная строка, а вторым - числовое значение "2" (так как в конечном массиве нам в качестве значений необходимо получить именно двухзначные числа), после чего выводим полученный результат в браузер (МОЙ СПОСОБ):
	$str = '1234567890';
	$arr = str_split($str, 2);
	echo "<pre>";
	echo print_r($arr);
	echo "</pre>";
	
	// - (СПОСОБ АВТОРА):
	var_dump(str_split('1234567890', 2));
	
	// объявляем переменные "$str" и "$arr", в которые записываем заявленную строку и встроенную функцию "str_split()" (другого способа преобразования строки в массив) соответственно, затем в эту функцию первым параметром мы передаём нашу переменную, в которой заявленная строка, а вторым - числовое значение "1" (так как в конечном массиве нам в качестве значений необходимо получить именно однозначные числа), после чего выводим полученный результат в браузер (МОЙ СПОСОБ):
	$str = '1234567890';
	$arr = str_split($str, 1);
	echo "<pre>";
	echo print_r($arr);
	echo "</pre>";
	
	// - (СПОСОБ АВТОРА):
	var_dump(str_split('1234567890', 1));
	
	// объявляем переменные "$str" и "$arr", в которые записываем заявленную строку и встроенную функцию "str_split()" (другого способа преобразования строки в массив) соответственно, затем в эту функцию первым параметром мы передаём нашу переменную, в которой заявленная строка, а вторым - числовое значение "2" (так как в конечном массиве нам в качестве значений необходимо получить именно двухзначные числа), после чего выводим полученный результат (в виде строки) в браузер (МОЙ СПОСОБ):
	$str = '1234567890';
	$arr = str_split($str, 2);
	echo "$arr[0]-$arr[1]-$arr[2]-$arr[3]-$arr[4]";
	
	// - (СПОСОБ АВТОРА):
	echo implode('-', str_split('1234567890', 2));
	
	 // объявляем переменную "$str", в которую записываем произвольную строку с пробельными символами по краям, после чего с использованием встроенной функции "trim()" (обрезания символов) выводим содержимое данной строки в браузер, но уже без пробельных символов (МОЙ СПОСОБ (ПОЧТИ АНАЛОГИЧНЫЙ СПОСОБУ АВТОРА)):
	$str = '     1234567890     ';
	echo trim($str);
	
	// объявляем переменную "$str", в которую записываем заявленную строку, после чего с использованием встроенной функции "trim()" (обрезания символов), в котором 2-м параметром мы указываем символ, который необходимо обрезать (в данном случае "/"), выводим содержимое данной строки в браузер, но уже без слеш-символов (МОЙ СПОСОБ (АНАЛОГИЧНЫЙ СПОСОБУ АВТОРА)):
	$str = '/php/';
	echo trim($str, '/');
	
	// объявляем переменную "$str", в которую записываем заявленную строку, после чего с использованием встроенной функции "rtrim()" (обрезания символов справа), в котором 2-м параметром мы указываем символ, который необходимо обрезать (в данном случае "."), выводим содержимое данной строки в браузер, но уже без изначального символова, а с нашим заданным в строке вывода (МОЙ СПОСОБ (АНАЛОГИЧНЫЙ СПОСОБУ АВТОРА):
	$str = 'слова слова слова.';
	echo rtrim($str, '.').".";
	
	// объявляем переменную "$str", в которую записываем заявленную строку, после чего с использованием встроенной функции "strrev()" (реверсирования), в котором мы указываем переменную с заявленной строкой, выводим содержимое данной строки в браузер, но уже с применением реверсирования (МОЙ СПОСОБ (АНАЛОГИЧНЫЙ СПОСОБУ АВТОРА):
	$str = '12345';
	echo strrev($str);
	
	// объявляем переменные "$str" и "$rev", в которые записываем заявленную строку и встроенную функцию "strrev()" (реверсирования) соответственно, после чего объявляем условие по конструкции "if-else", в котором указываем следующее условие: если значения 2-х указанных переменных равны друг другу, то в браузер мы выводим строку ' - это слово палиндром' (СПОСОБ АВТОРА): 
	$str = 'madam';
	$rev = strrev($str);
	if ($rev == $str) {
		echo $str. ' - это слово палиндром';
	}
	
	// объявляем переменную "$str", в которую записываем произвольную строку и в браузер выводим эту же строку, помещённую в тело встроенной функции "str_shuffle()" (случайного порядка) (МОЙ СПОСОБ (АНАЛОГИЧЕН СПОСОБУ АВТОРА):
	$str = '12345';
	echo str_shuffle($str);
	
	// объявляем переменные "$str" и "$newStr", в которые записываем строку согласно условию задачи и встроенную функцию "str_shuffle()" (случайного порядка) (с нашей переменной в качестве параметра) соответственно, после чего выводим в браузер результат работы функции "substr()" (обрезания строки), первым параметром в котором указываем нашу переменную "$newStr", вторым - числовое значение "0" (так как мы рассматриваем начало строки), третьим - 6 (так как по условию задачи нам нужно получить именно 6 символов из первичной строки) (СПОСОБ АВТОРА):
	$str = 'qwertyuiopasdfghjklzxcvbnm'; //все латинские буквы
	$newStr = str_shuffle($str); //перемешиваем их
	echo substr($newStr, 0, 6); //берем первые 6 символов
	
	// объявляем переменную "$str", в которую записываем заявленную строку, после чего выводим в браузер результат работы встроенной функции "number_format()" (форматирования числа), в которой первый параметр - это значение нашей переменной, второй параметр - число "0", третий и четвёртый параметры - пробельные строки (СПОСОБ АВТОРА):
	$str = '12345678';
	echo number_format($str, 0, ' ', ' ');
	
	// объявляем переменную "$str", в которую записываем заявленную строку "x", после чего объявляем цикл "for", в условии которого указываем счётчик цикла: начало, соответствующее числовому значению "0"; условие цикла - не более числового значения "9"; шаг цикла (инкрементирование счётчика на каждой итерации), а в теле данного цикла с помощью встроенной функции "str_repeat()" (повторения строки) указываем вывод в браузер первоначальной переменной в качестве первого параметра и счётчик цикла в качестве второго, а также тег перевода строки в виде строки (МОЙ СПОСОБ):
	$str = "x";
	for ($i=1; $i<=9; $i++) {
		echo str_repeat($str, $i)."<br>";
	}
	
	// - (СПОСОБ АВТОРА):
	for ($i = 1; $i <= 9; $i++) {
		echo str_repeat('x' , $i).'<br>';
	}
	
	// объявляем переменную "$str", в которую записываем числовое значение "1", после чего объявляем цикл "for", в условии которого указываем счётчик цикла: начало, соответствующее числовому значению "0"; условие цикла - не более числового значения "9"; шаг цикла (инкрементирование счётчика на каждой итерации), а в теле данного цикла с помощью встроенной функции "str_repeat()" (повторения строки) указываем вывод в браузер первоначальной переменной в качестве первого параметра (но в данном случае уже с инкрементированием на каждой итерации) и счётчик цикла в качестве второго, а также тег перевода строки в виде строки (МОЙ СПОСОБ):
	$str = 1;
	for ($i=1; $i<=9; $i++) {
		echo str_repeat($str++, $i)."<br>";
	}
	
	// - (СПОСОБ АВТОРА):
	for ($i = 1; $i <= 9; $i++) {
		echo str_repeat($i , $i).'<br>';
	}
	
	// объявляем переменную "$str", в которую записываем заявленную строку, после чего выводим в браузер значение этой переменной в качестве единственного параметра встроенной функции "strip_tags()" (удаления html-тегов из строки) (МОЙ СПОСОБ):
	$str = 'html, <b>php</b>, js';
	echo strip_tags($str);
	
	// - (СПОСОБ АВТОРА):
	echo strip_tags('html, <b>php</b>, js');
	
	// объявляем переменную "$str", в которую записываем произвольную строку, содержащую открывающиеся и закрывающиеся html-теги "<b>" и "<i>", после чего выводим в браузер значение этой переменной в качестве первого параметра встроенной функции "strip_tags()", а строку '<b><i>' - в качестве второго (МОЙ СПОСОБ):
	$str = "<b>Hello</b>, <i>Wolrd</i>!";
	echo strip_tags($str, '<b><i>');
	
	// - (СПОСОБ АВТОРА):
	echo strip_tags($str, '<b><i>');
	
	// объявляем переменную "$str", в которую записываем заявленную строку, после чего выводим в браузер значение этой переменной в качестве единственного параметра встроенной функции "htmlspecialchars()" (вывода строки без интерполяции тегов), а строку '<b><i>' - в качестве второго (МОЙ СПОСОБ):
	$str = 'html, <b>php</b>, js';
	echo htmlspecialchars($str);
	
	// - (СПОСОБ АВТОРА):
	echo htmlspecialchars('html, <b>php</b>, js');
	
	// используя встроенную функцию "ord()" (возврата ASCII-кода по символу), выводим в браузер ADCII-коды, соответствующие заявленным символам (МОЙ СПОСОБ (АНАЛОГИЧЕН СПОСОБУ АВТОРА)):
	echo ord('a');
	echo ord('b');
	echo ord('c');
	echo ord(' ');
	
	// используя встроенную функцию "chr()" (возврата символа по ASCII-коду), выводим в браузер символ, соответствующий заявленному ASCII-коду (МОЙ СПОСОБ (АНАЛОГИЧЕН СПОСОБУ АВТОРА)):
	echo chr(33);
	
	// объявляем переменную "$str", в которую записываем встроенную функцию "chr()" (возврата символа по ASCII-коду), в котором единственным параметром указываем встроенную функцию "mt_rand" (случайного выбора числа в заданном промежутке), после чего данную переменную выводим в браузер: (МОЙ СПОСОБ):
	$str = chr(mt_rand(65, 90));
	echo $str;
	
	// - (СПОСОБ АВТОРА):
	$str = chr(rand(65, 90));
	echo $str;
	
	// объявляем переменные "$str" и "$len", в которые записываем пустую строку и числовое значение "5" соответственно, после чего объявляем цикл "for", в условии которого указываем счётчик цикла: начало, соответствующее числовому значению "1"; условие цикла - не более числового значения "$len"; шаг цикла (инкрементирование счётчика на каждой итерации), а в теле данного цикла, используя встроенные функции "chr()" и "rand()", пустой переменной "$str" присваиваем функцию "chr()", единственным параметром в которой указываем функцию "rand()" с 2-мя параметрами в виде числовых значений "65" и "90" (так как именно такой диапазон порядковых номеров имеют латинские буквы верхнего регистра), после чего переменную "$str" выводим в браузер (СПОСОБ АВТОРА):
	$str = '';
	$len = 5;
	for ($i = 1; $i <= $len; $i++) {
		$str .= chr(rand(65, 90));
	}
	echo $str;
	
	// объявляем переменную "$str", в которую записываем произвольную строку, содержащую какую-либо букву латинского алфавита (в данном случае была выбрана буква "с"), после чего объявляем условие по конструкции "if-else", в котором указываем 3 условия, в 1-м из которых указываем, что: если встроенная функция "ord()" c параметром "$str" имеет числовое значение от "65" до "90", то мы выводим в браузер соответствующую строку (сообщение о том, что значение переменной имеет верхний регистр); если от "97" до "122" - нижний регистр; иначе - строку о том, что это нетипичный случай (МОЙ СПОСОБ):
	$str = "c"; 
	if (ord($str) >= 65 && ord($str) <= 90) {
		echo "Данная латинская буква имеет <b>ВЕРХНИЙ</b> регистр!";
	} elseif (ord($str) >= 97 && ord($str) <= 122) {
		echo "Данная латинская буква имеет <b>НИЖНИЙ</b> регистр!";
	} else {
		echo "ЭТО НЕТИПИЧНЫЙ СЛУЧАЙ!";
	}
	
	// - (СПОСОБ АВТОРА):
	$str = 'А';
	$code = ord($str);
	if ($code >= 65 and $code <= 90) {
		echo 'большая буква';
	}
	if ($code >= 97 and $code <= 122) {
		echo 'маленькая буква';
	}
	
	// объявляем переменную $str, в которую записываем заявленную строку, после чего, используя встроенную функцию "strchr()" (поиска первого вхождения подстроки в строку), в которой первым параметром мы указываем нашу переменную как строку, в которой мы ищем, а вторым - искомый символ (в данном случае "-", так как именно с него начинается подстрока, которую нам необходимо вывести в браузер), выводим в браузер нужную нам подстроку (СПОСОБ АВТОРА):
	$str = 'ab-cd-ef';
	echo strchr($str, '-');
	
	// объявляем переменную $str, в которую записываем заявленную строку, после чего, используя встроенную функцию "strrchr()" (поиска последнего вхождения подстроки в строку), в которой первым параметром мы указываем нашу переменную как строку, в которой мы ищем, а вторым - искомый символ (в данном случае "-", так как именно с него начинается подстрока, которую нам необходимо вывести в браузер), выводим в браузер нужную нам подстроку (МОЙ СПОСОБ (АНАЛОГИЧЕН СПОСОБУ АВТОРА)):
	$str = 'ab-cd-ef';
	echo strrchr($str, '-');
	
	// объявляем переменную "$str", в которую записываем заявленную строку, после чего, используя встроенную функцию "strstr()" (другого способа поиска первого вхождения подстроки в строку), в которой первым параметром мы указываем нашу переменную как строку, в которой мы ищем, а вторым - искомый символ (в данном случае "-", так как именно с него начинается подстрока, которую нам необходимо вывести в браузер), выводим в браузер нужную нам подстроку (МОЙ СПОСОБ):
	$str = 'ab--cd--ef';
	echo strstr($str, '-');
	
	// - (СПОСОБ АВТОРА):
	$str = 'ab--cd--ef';
	echo strstr($str, '--');
	
	// объявляем переменные "$str" и "$arr", в которые записываем заявленную строку и функцию преобразования строки в массив соответственно, после чего выводим в браузер элемент массива с нулевым индексом в исходном виде, а элементы с 1-м и 2-м индексами - в теле встроенной функции "ucfirst()" (МОЙ СПОСОБ):
	$str = 'var_test_text';
	$arr = explode('_', $str);
	echo "$arr[0]".ucfirst($arr[1]).ucfirst($arr[2]);
	
	// - (СПОСОБ АВТОРА):
	$arr = explode('_', 'var_test_text');
	$str = '';
	foreach ($arr as $key=>$elem) {
		if($key != 0) {
			$str .=  ucfirst($elem);
		} else {
			$str .= $elem;
		}
	}
	echo $str;
	
	// объявляем переменные "$str" и "$arr", в которые записываем заявленную строку и функцию преобразования строки в массив соответственно, после чего выводим в браузер элементы массива с нулевым и первым индексами (с пробельным строковым символом между ними) в теле встроенной функции "strrev()" (МОЙ СПОСОБ):
	$str = '12345 67890';
	$arr = explode(' ', $str);
	echo strrev($arr[0])." ".strrev($arr[1]);
	
	// - (СПОСОБ АВТОРА):
	$str = '12345 67890';
	$arr = explode(' ', $str);
	$arr[0] = strrev($arr[0]);
	$arr[1] = strrev($arr[1]);
	echo implode(' ', $arr);
	
	// объявляем переменную "$arr", в которую записываем произвольный массив, содержащий подстроку "3", после чего объявляем цикл по конструкции "foreach()", в теле которого объявляем условие по конструкции "if-else", в котором указываем что: если встроенная функция "strpos()" c параметрами "$elem" и строковое значение "3" (так как это наша искомая подстрока) НЕ эквивалентно булевскому значению "false", то мы выводим в браузер соответствующий элемент массива, иначе - ничего не выводим (СПОСОБ АВТОРА):
	$arr = [3, 11, 13, 31, 28, 34];
	foreach ($arr as $elem) {
		if (strpos($elem, '3') !== false) {
			echo $elem . '<br>';
		}
	}
	
	// объявляем переменные "$arr" и "$sum", в которые записываем произвольный массив, содержащий некоторое кол-во подстрок "3", и числовое значение "0" соответственно, после чего объявляем цикл по конструкции "foreach()", в теле которого объявляем условие по конструкции "if-else", в котором указываем что: если встроенная функция "strpos()" c параметрами "$elem" и строковое значение "3" (так как это наша искомая подстрока) НЕ эквивалентно булевскому значению "false", то мы в каждой итерации инкрементируем переменную "$sum", иначе - ничего не делаем, а затем выводим в браузер конечное значение переменной "$sum" (МОЙ СПОСОБ (АНАЛОГИЧЕН СПОСОБУ АВТОРА)):
	$arr = [32, 34, 36, 38, 30];
	$sum = 0;
	foreach ($arr as $v) {
		if (strpos($v, '3') !== false) {
			$sum++;
		}
	}
	echo $sum;
	
?>

</body>
</html>