<!DOCTYPE html>
<html lang="ru">
<head>
	<title>Практика на комбинации функций</title>
	<meta charset="utf-8">
</head>
<body>

<?php

	// объявляем переменную "$arr", в которую записываем произвольный числовой массив, объявляем переменную "$result", в которой, используя встроенные функции "$array_sum()" и "count()", записываем формулу расчёта средней арифметической чисел массива, после чего выводим в браузер данный результат (МОЙ СПОСОБ):
	$arr = [1, 2, 3, 4, 5];
	$result = array_sum($arr) / count($arr);
	echo $result;
	
	// - (СПОСОБ АВТОРА):
	$arr = [1, 2, 3, 4, 5];
	echo array_sum($arr) / count($arr);
	
	// объявляем переменную "$arr", в которую записываем встроенную функцию "range()" с параметрами в виде заявленных чисел, после чего выводим в браузер сумму всех чисел массива, используя встроеную функцию "array_sum()" (МОЙ СПОСОБ):
	$arr = range(1, 100);
	echo array_sum($arr);
	
	// - (СПОСОБ АВТОРА):
	echo array_sum(range(1, 100));
	
	// объявляем переменную "$arr", в которую записываем встроенную функцию "range()" с параметрами в виде заявленных чисел, после чего выводим в браузер все эти числа в столбик, используя встроеную функцию "print_r()" (МОЙ СПОСОБ):
	$arr = range(1, 100);
	echo "<pre>";
	print_r($arr);
	echo "</pre>";
	
	// - (СПОСОБ АВТОРА):
	$arr = range(1, 100);
	echo implode('<br>', $arr);
	
	// объявляем переменную "$arr", в которую записываем встроенную функцию "array_fill()" с параметрами в виде заявленных чисел и строкового элемента, после чего выводим в браузер нужное кол-во этого строкового элемента, используя встроеную функцию "print_r()" (МОЙ СПОСОБ):
	$arr = array_fill(0, 10, 'x');
	echo "<pre>";
	print_r($arr);
	echo "</pre>";
	
	// - (СПОСОБ АВТОРА):
	$arr = array_fill(0, 10, 'x');
	var_dump($arr);
	
	// объявляем переменную "$arr", в которую записываем встроенную функцию "range()" с параметрами в виде заявленных чисел, затем объявляем встроенную функцию "shuffle()" (случайного порядка), после чего выводим в браузер все элементы массива в случайном порядке, используя встроеную функцию "print_r()" (МОЙ СПОСОБ):
	$arr = range(1, 10);
	shuffle($arr);
	echo "<pre>";
	print_r($arr);
	echo "</pre>";
	
	// - (СПОСОБ АВТОРА):
	$arr = range(1, 10);
	shuffle($arr);
	var_dump($arr);
	
	// объявляем переменную "$arr", в которую записываем встроенную функцию "range()" с параметрами в виде чисел (2-й из которых произвольный), объявляем переменную "$fac", в которую записываем встроенную функцию "array_product" (для умножения всех числовых элементов массива) с единственным параметром в виде нашей переменной, после чего выводим в браузер результат этого умножения (МОЙ СПОСОБ):
	$arr = range(1, 10);
	$fac = array_product($arr);
	echo $fac;	
	
	// - (СПОСОБ АВТОРА):
	$num = 5; //найдем факториал 5
	$arr = range(1, $num);
	echo array_product($arr);
	
	// объявляем переменную "$str", в которую записываем произвольную числовую строку, объявляем переменную "$arr", в которую записываем встроенную функцию "str_split" с параметрами в виде переменной массива и кол-ва символов, на которое мы делим массив, объявляем переменную "$sum", в которую записываем встроенную функцию "array_sum()" с единственным параметром в виде нашей переменной "$arr", после чего выводим в браузер сумму всех цифр в числе (МОЙ СПОСОБ):
	$str = '12345';
	$arr = str_split($str, 1);
	$sum = array_sum($arr);
	echo $sum;
	
	// - (СПОСОБ АВТОРА):
	$num = 123;
	$arr = str_split($num, 1);
	echo = array_sum($arr);
	
	// объявляем переменную "$str", в которую записываем произвольную строку, далее в эту переменную перезаписываем встроенную функцию "strrev()" для обратного порядка символов в строке, далее снова перезаписываем в эту переменную - встроенную функцию "ucfirst()" (для изменения первого символа строки на верхний регистр), далее перезаписываем ту же переменную на встроенную функцию "strrev()" для обратного порядка символов в строке, после чего выводим в браузер значение переменной "$str" - то есть, последний символ строки в верхнем регистре (СПОСОБ АВТОРА):
	$str = 'abcde';
	$str = strrev($str);
	$str = ucfirst($str);
	$str = strrev($str);
	echo $str;
	
	// объявляем переменную "$arr", в которую записываем произвольные числа, после чего выводим в браузер квадратные корни всех этих чисел (МОЙ СПОСОБ):
	$arr = [1, 2, 3, 4, 5];
	echo "<pre>";
	print_r(array_map('sqrt', $arr));
	echo "</pre>";
	
	// - (СПОСОБ АВТОРА):
	$arr = [1, 4, 5, 7, 9];
	$result = array_map('sqrt', $arr);
	var_dump($result);
	
	// объявляем переменную "$arr1", в которую записываем встроенную функцию "range()" с параметрами в виде строковых значений "a" и "z", объявляем переменную "$arr2", в которую записываем ту же встроенную функцию, но с числовыми значениями "1" и "26", объявляем переменную "$arr3", в которую записываем встроенную функцию "array_combine()" (комбинирования массивов по типу "ключ(массив-1) - значение(массив-2)" с параметрами в виде наших массивных переменных, после чего выводим в браузер конечный массив, состоящий из нужных нам ключей и значений (МОЙ СПОСОБ):
	$arr1 = range('a', 'z');
	$arr2 = range(1, 26);
	$arr3 = array_combine($arr1, $arr2);
	echo "<pre>";
	print_r($arr3);
	echo "</pre>";
	
	// - (СПОСОБ АВТОРА):
	$keys = range('a', 'z');
	$elems = range(1, 26);
	$arr = array_combine($keys, $elems);
	var_dump($arr);
	
	// объявляем переменную "$str", в которую записываем заявленную числовую строку, объявляем переменную "$arr", в которую записываем встроенную функцию "str_split" с параметрами в виде переменной массива и кол-ва символов, на которое мы делим массив, после чего выводим в браузер сумму всех элементов массива с помощью встроенной функции "array_sum()" (МОЙ СПОСОБ):
	$str = '1234567890';
	$arr = str_split($str, 2);
	echo array_sum($arr);
	
	// - (СПОСОБ АВТОРА):
	$str = '1234567890';
	$arr = str_split($str, 2)
	$result = array_sum($arr);
	echo $result;
	
?>

</body>
</html>